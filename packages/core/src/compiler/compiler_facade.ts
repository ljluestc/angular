/** * @license * Copyright Google LLC All Rights Reserved. * * Use of this source code is governed by an MIT-style license that can be * found in the LICENSE file at https://angular.io/license */import {global} from '../util/global';import {CompilerFacade, ExportedCompilerFacade, Type} from './compiler_facade_interface';export * from './compiler_facade_interface';  PartialDeclaration,}interface JitCompilerUsageRequest {  usage: JitCompilerUsage; }export function getCompilerFacade(request: JitCompilerUsageRequest): CompilerFacade {  const globalNg: ExportedCompilerFacade = global['ng'];  if (globalNg && globalNg.ɵcompilerFacade) {    return globalNg.ɵcompilerFacade;     // console.    console.error(`JIT compilation failed for ${request.kind}`, request.type);    let message = `The ${request.kind} '${  request .type.name}' needs to be compiled using the JIT compiler, but '@angular/compiler' is not available.\n\n`;   message +=`However, the Angular Linker has not processed the library such that JIT compilation is used as fallback.\n`;message += '\n';message +=    } else {message +=`JIT compilation is discouraged for production use-cases! Consider using AOT mode instead.\n`;    }    message +=  `Alternatively, the JIT compiler should be loaded by bootstrapping using '@angular/platform-browser-dynamic' or '@angular/platform-server',\n`;    message +=  `or manually provide the compiler with 'import "@angular/compiler";' before bootstrapping.`;    throw new Error(message);  } else {    throw new Error('JIT compiler unavailable');  }}