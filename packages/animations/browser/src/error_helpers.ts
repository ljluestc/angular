/** * @license * Copyright Google LLC All Rights Reserved. * * Use of this source code is governed by an MIT-style license that can be * found in the LICENSE file at https://angular.io/license */import {ÉµRuntimeError as RuntimeError} from '@angular/core';import {RuntimeErrorCode} from './errors';const LINE_START = '\n - ';export function invalidTimingValue(exp: string|number): Error {  return new RuntimeError(eErrorCode.INVALID_TIMING_VALUE,ode && `The provided timing value "${exp}" is invalid.`);}export function negativeStepValue(): Error {  return new RuntimeError(eErrorCode.NEGATIVE_STEP_VALUE,ode && 'Duration values below 0 are not allowed for this animation step.');}export function negativeDelayValue(): Error {  return new RuntimeError(eErrorCode.NEGATIVE_DELAY_VALUE,ode && 'Delay values below 0 are not allowed for this animation step.');}export function invalidStyleParams(varName: string): Error {  return new RuntimeError(eErrorCode.INVALID_STYLE_PARAMS,ode &&`Unable to resolve the local animation param ${varName} in the given list of values`);}export function invalidParamValue(varName: string): Error {  return new RuntimeError(eErrorCode.INVALID_PARAM_VALUE,ode && `Please provide a value for the animation param ${varName}`);}export function invalidNodeType(nodeType: string): Error {  return new RuntimeError(eErrorCode.INVALID_NODE_TYPE,ode && `Unable to resolve animation metadata node #${nodeType}`);}export function invalidCssUnitValue(userProvidedProperty: string, value: string): Error {  return new RuntimeError(eErrorCode.INVALID_CSS_UNIT_VALUE,ode && `Please provide a CSS unit value for ${userProvidedProperty}:${value}`);}export function invalidTrigger(): Error {  return new RuntimeError(eErrorCode.INVALID_TRIGGER,ode &&'animation triggers cannot be prefixed with an `@` sign (e.g. trigger(\'@foo\', [...]))');}export function invalidDefinition(): Error {  return new RuntimeError(eErrorCode.INVALID_DEFINITION,ode && 'only state() and transition() definitions can sit inside of a trigger()');}export function invalidState(metadataName: string, missingSubs: string[]): Error {  return new RuntimeError(eErrorCode.INVALID_STATE,ode &&`state("${   metadataName}", ...) must define default values for all the following style substitutions: ${   missingSubs.join(', ')}`);}export function invalidStyleValue(value: string): Error {  return new RuntimeError(eErrorCode.INVALID_STYLE_VALUE,ode && `The provided style string value ${value} is not allowed.`);}export function invalidProperty(prop: string): Error {  return new RuntimeError(eErrorCode.INVALID_PROPERTY,ode &&`The provided animation property "${   prop}" is not a supported CSS property for animations`);}export function invalidParallelAnimation(    prop: string, firstStart: number, firstEnd: number, secondStart: number,    secondEnd: number): Error {  return new RuntimeError(eErrorCode.INVALID_PARALLEL_ANIMATION,ode &&`The CSS property "${prop}" that exists between the times of "${firstStart}ms" and "${   firstEnd}ms" is also being animated in a parallel animation between the times of "${   secondStart}ms" and "${secondEnd}ms"`);}export function invalidKeyframes(): Error {  return new RuntimeError(eErrorCode.INVALID_KEYFRAMES,ode && `keyframes() must be placed inside of a call to animate()`);}export function invalidOffset(): Error {  return new RuntimeError(eErrorCode.INVALID_OFFSET,ode && `Please ensure that all keyframe offsets are between 0 and 1`);}export function keyframeOffsetsOutOfOrder(): Error {  return new RuntimeError(eErrorCode.KEYFRAME_OFFSETS_OUT_OF_ORDER,ode && `Please ensure that all keyframe offsets are in order`);}export function keyframesMissingOffsets(): Error {  return new RuntimeError(eErrorCode.KEYFRAMES_MISSING_OFFSETS,ode && `Not all style() steps within the declared keyframes() contain offsets`);}export function invalidStagger(): Error {  return new RuntimeError(eErrorCode.INVALID_STAGGER,ode && `stagger() can only be used inside of query()`);}export function invalidQuery(selector: string): Error {  return new RuntimeError(eErrorCode.INVALID_QUERY,ode &&`\`query("${selector}")\` returned zero elements. (Use \`query("${   selector}", { optional: true })\` if you wish to allow this.)`);}export function invalidExpression(expr: string): Error {  return new RuntimeError(eErrorCode.INVALID_EXPRESSION,ode && `The provided transition expression "${expr}" is not supported`);}export function invalidTransitionAlias(alias: string): Error {  return new RuntimeError(eErrorCode.INVALID_TRANSITION_ALIAS,ode && `The transition alias value "${alias}" is not supported`);}export function validationFailed(errors: Error[]): Error {  return new RuntimeError(eErrorCode.VALIDATION_FAILED,ode && `animation validation failed:\n${errors.map(err => err.message).join('\n')}`);}export function buildingFailed(errors: Error[]): Error {  return new RuntimeError(eErrorCode.BUILDING_FAILED,ode && `animation building failed:\n${errors.map(err => err.message).join('\n')}`);}export function triggerBuildFailed(name: string, errors: Error[]): Error {  return new RuntimeError(eErrorCode.TRIGGER_BUILD_FAILED,ode &&`The animation trigger "${name}" has failed to build due to the following errors:\n - ${   errors.map(err => err.message).join('\n - ')}`);}export function animationFailed(errors: Error[]): Error {  return new RuntimeError(eErrorCode.ANIMATION_FAILED,ode &&`Unable to animate due to the following errors:${LINE_START}${   errors.map(err => err.message).join(LINE_START)}`);}export function registerFailed(errors: Error[]): Error {  return new RuntimeError(eErrorCode.REGISTRATION_FAILED,ode &&`Unable to build the animation due to the following errors: ${   errors.map(err => err.message).join('\n')}`);}export function missingOrDestroyedAnimation(): Error {  return new RuntimeError(eErrorCode.MISSING_OR_DESTROYED_ANIMATION,ode && 'The requested animation doesn\'t exist or has already been destroyed');}export function createAnimationFailed(errors: Error[]): Error {  return new RuntimeError(eErrorCode.CREATE_ANIMATION_FAILED,ode &&`Unable to create the animation due to the following errors:${   errors.map(err => err.message).join('\n')}`);}export function missingPlayer(id: string): Error {  return new RuntimeError(eErrorCode.MISSING_PLAYER,ode && `Unable to find the timeline player referenced by ${id}`);}export function missingTrigger(phase: string, name: string): Error {  return new RuntimeError(eErrorCode.MISSING_TRIGGER,ode &&`Unable to listen on the animation trigger event "${   phase}" because the animation trigger "${name}" doesn\'t exist!`);}export function missingEvent(name: string): Error {  return new RuntimeError(eErrorCode.MISSING_EVENT,ode &&`Unable to listen on the animation trigger "${   name}" because the provided event is undefined!`);}export function unsupportedTriggerEvent(phase: string, name: string): Error {  return new RuntimeError(eErrorCode.UNSUPPORTED_TRIGGER_EVENT,ode &&`The provided animation trigger event "${phase}" for the animation trigger "${   name}" is not supported!`);}export function unregisteredTrigger(name: string): Error {  return new RuntimeError(eErrorCode.UNREGISTERED_TRIGGER,ode && `The provided animation trigger "${name}" has not been registered!`);}export function triggerTransitionsFailed(errors: Error[]): Error {  return new RuntimeError(eErrorCode.TRIGGER_TRANSITIONS_FAILED,ode &&`Unable to process animations due to the following failed trigger transitions\n ${   errors.map(err => err.message).join('\n')}`);}export function triggerParsingFailed(name: string, errors: Error[]): Error {  return new RuntimeError(eErrorCode.TRIGGER_PARSING_FAILED,ode &&`Animation parsing for the ${name} trigger have failed:${LINE_START}${   errors.map(err => err.message).join(LINE_START)}`);}export function transitionFailed(name: string, errors: Error[]): Error {  return new RuntimeError(eErrorCode.TRANSITION_FAILED,ode && `@${name} has failed due to:\n ${errors.map(err => err.message).join('\n- ')}`);}